---
name: cs100-F2019-lab9
break: true
indent: 4
---

# Learn more about GatorGrader and its supported checks by visiting this web site:
# https://github.com/GatorEducator/gatorgrader

# Explanation:
# --> a check without an "--exact" runs a count for an entity as an "at least"
# --> checks below a file in a specified directory are for that specific file and directory
# --> checks that appear stand-alone are for an entire Git repository

# --> check the source code for various characteristics
src/main:
    java:
        labnine/TodoListItem.java:
            ConfirmFileExists
            CountSingleLineComments --language Java --count 1
            CountMultipleLineComments --language Java --count 15
            MatchFileFragment --fragment "println(" --count 0 --exact
            MatchFileFragment --fragment "TODO" --count 0 --exact
            MatchFileFragment --fragment "Add Your Name Here" --count 0 --exact
            MatchFileFragment --fragment "package labnine;" --count 1 --exact

# --> check the source code for various characteristics
src/main:
    java:
        labnine/TodoList.java:
            ConfirmFileExists
            CountSingleLineComments --language Java --count 11
            CountMultipleLineComments --language Java --count 11
            MatchFileFragment --fragment "println(" --count 0 --exact
            MatchFileFragment --fragment "Add Your Name Here" --count 0 --exact
            MatchFileFragment --fragment "package labnine;" --count 1 --exact
            MatchFileFragment --fragment "while (" --count 5
            MatchFileFragment --fragment "if (" --count 4
            MatchFileFragment --fragment "ArrayList<TodoListItem>" --count 6
            MatchFileFragment --fragment "Iterator<TodoListItem>" --count 7

# NOTE: This check will fail because of the fact that the TodoList has the word TODO in
# the names of variables, thereby causing the count to go above zero

# DEFECT: If you change this to "TODO:" it will break the Gradle plugin's parser
#
# MatchFileFragment --fragment "TODO" --count 0 --exact

# --> check the source code for various characteristics
src/main:
    java:
        labnine/TodoListManager.java:
            ConfirmFileExists
            CountSingleLineComments --language Java --count 3
            CountMultipleLineComments --language Java --count 2
            MatchFileFragment --fragment "TODO" --count 0 --exact
            MatchFileFragment --fragment "Add Your Name Here" --count 0 --exact
            MatchFileFragment --fragment "package labnine;" --count 1 --exact
            MatchFileFragment --fragment "println(" --count 10
            MatchFileFragment --fragment "while (" --count 3
            MatchFileFragment --fragment "if (" --count 6
            MatchFileFragment --fragment "else if (" --count 5
            MatchFileFragment --fragment "println(" --count 10
            MatchFileFragment --fragment "command.equals" --count 5

# NOTE: This type of check does not parse. Need to see if problem is in the
# plugin or in the GatorGrader Python code base.

# MatchFileFragment --fragment "command.equals(\"read\"" --count 1

# --> check the technical writing for various characteristics
writing/reflection.md:
    ConfirmFileExists
    CountFileWords --count 200
    CountMarkdownTags --tag "heading" --count 5 --exact
    CountMarkdownTags --tag "code_block" --count 2 --exact
    MatchFileFragment --fragment "Add Your Name Here" --count 0 --exact

# --> check that the number of commits in the Git repository is beyond a threshold
CountCommits --count 10

# --> check that the program executes correctly and produces exactly the specified lines of output
ExecuteCommand --command "gradle build"

# --> NOTE: Running the program is not possible because of the need for user interaction
#
# ExecuteCommand --command "gradle -q --console plain run"
# CountCommandOutput --command "gradle -q --console plain run" --count 12 --exact
